<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- CSS -->
    <link rel="stylesheet" href="/main.css" />

    <title>Document</title>
  </head>
  <body class="grey-bg">
    <%- include('nav.ejs') %>

    <div class="white-bg">
      <% for(let i = 0; i < post.length; i++){ %>
      <div class="list-box">
        <h4>
          <!-- <input id="hidden-id" value="<%= post[i]._id %>" hidden /> -->

          <a class="no-line" href="/detail/<%= post[i]._id %>">
            <%= post[i].title %>
          </a>
          <a class="no-line color-stay" href="/edit/<%= post[i]._id %>">üñã</a>
          <span class="delete" data-id="<%= post[i]._id %>">‚ùå</span>
        </h4>
        <p><%= post[i].content %></p>
      </div>
      <% } %>
    </div>
    <div class="pagination">
      <% if(allPost.length > 0) { %> <% for(let i = 0; i <= allPost.length/5;
      i++) { %>
      <a href="/list/<%= i+1 %>" class="no-line">
        <button><%= i+1 %></button>
      </a>
      <% } %> <% } %>
    </div>

    <!-- JS for AJAX -->
    <script>
      // const ids = document.querySelectorAll("#hidden-id");
      // console.log(ids[0].value);
      const deleteBtns = document.querySelectorAll(".delete");
      console.log(deleteBtns[0]);

      for (let i = 0; i < deleteBtns.length; i++) {
        deleteBtns[i].addEventListener("click", async (e) => {
          // Sending DELETE request Without REFRESTH
          // (1)
          // fetch("/delete", {
          //   method: "DELETE",
          //   headers: {
          //     "Content-Type": "application/json",
          //   },
          //   body: JSON.stringify({ id: ids[i].value }),
          // });

          // (2)
          const id = e.target.dataset.id;
          await fetch(`/delete?docid=${id}`, {
            method: "DELETE",
          })
            .then((r) => {
              if (r.status == 200) {
                return r.text();
              } else {
                // Server Error
                alert("SORRY, SERVER ERROR!");
              }
            })
            .then((r) => {
              e.target.parentElement.parentElement.style.display = "none";
            })
            .catch((e) => {
              // INTERNET CONNECTION ISSUE and so on.
              alert(`ERROR: ${e}`);
            });
        });
      }
    </script>
  </body>
</html>
